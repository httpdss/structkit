name: publish-pypi

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      upload:
        description: 'Upload to PyPI'
        required: false
        default: 'true'

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v5
        with:
          ref: main

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${{ github.event.release.tag_name }}
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update pyproject.toml
        run: |
          sed -i 's/version = "[^"]*"/version = "${{ steps.version.outputs.version }}"/' pyproject.toml

      - name: Commit and push version update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          git push origin main

  build:
    needs: update-version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Check package version
        run: |
          # Ensure the version in pyproject.toml is equivalent to the latest git tag
          # use import metadata to get version
          PACKAGE_VERSION=$(python -c "import importlib.metadata; print(importlib.metadata.version('structkit'))")
          echo "Package version: $PACKAGE_VERSION"

          # Go to github releases to get latest tag
          LATEST_TAG=$(curl -s https://api.github.com/repos/httpdss/structkit/releases/latest | grep 'tag_name' | cut -d\" -f4)
          echo "Latest tag: $LATEST_TAG"

          if [ "$PACKAGE_VERSION" != "$LATEST_TAG" ]; then
            echo "Error: Package version ($PACKAGE_VERSION) does not match latest git tag ($LATEST_TAG)"
            exit 1
          fi

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel

      - name: Build distribution
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution
          path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.upload == 'true')

    steps:
      - uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: distribution
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install Twine
        run: pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/* --skip-existing

      - name: Create release note
        if: github.event_name == 'release'
        run: |
          echo "âœ… Package published to PyPI successfully!"
          echo "Version: ${{ github.event.release.tag_name }}"
          echo "PyPI URL: https://pypi.org/project/structkit/"
